// <auto-generated />
using System;
using ExpenseTracker.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseTracker.App.Migrations
{
    [DbContext(typeof(ExpenseTrackerDbContext))]
    [Migration("20250912075456_001_Initial")]
    partial class _001_Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTimeOffset>("HireDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int?>("ManagerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(127)
                        .HasColumnType("nvarchar(127)");

                    b.Property<int>("PrincipalId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("PrincipalId")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset>("Date")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ExpenseStateId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("TrackingId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseStateId");

                    b.HasIndex("FormId");

                    b.HasIndex("TrackingId")
                        .IsUnique();

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.ExpenseHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("RecordedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("RejectionReason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("ExpenseId");

                    b.ToTable("ExpenseHistories");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.ExpenseState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExpenseStates");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<int>("FormStateId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<string>("TrackingId")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FormStateId");

                    b.HasIndex("TrackingId")
                        .IsUnique();

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.FormHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActorId")
                        .HasColumnType("int");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("RecordedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActorId");

                    b.HasIndex("FormId");

                    b.ToTable("FormHistories");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.FormState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("FormStates");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.LoginHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IPAddress")
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<DateTimeOffset?>("LoginTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("LogoutTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("UserRoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserRoleId");

                    b.ToTable("LoginHistories");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Principal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Principals");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(31)
                        .HasColumnType("nvarchar(31)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PrincipalId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("PrincipalId", "RoleId")
                        .IsUnique();

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Employee", b =>
                {
                    b.HasOne("ExpenseTracker.Entities.Models.Principal", "Principal")
                        .WithOne("Employee")
                        .HasForeignKey("ExpenseTracker.Entities.Models.Employee", "PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Expense", b =>
                {
                    b.HasOne("ExpenseTracker.Entities.Models.ExpenseState", "ExpenseState")
                        .WithMany("Expenses")
                        .HasForeignKey("ExpenseStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTracker.Entities.Models.Form", "Form")
                        .WithMany("Expenses")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseState");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.ExpenseHistory", b =>
                {
                    b.HasOne("ExpenseTracker.Entities.Models.Employee", "Actor")
                        .WithMany("ExpenseHistories")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTracker.Entities.Models.Expense", "Expense")
                        .WithMany("ExpenseHistories")
                        .HasForeignKey("ExpenseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Expense");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Form", b =>
                {
                    b.HasOne("ExpenseTracker.Entities.Models.Currency", "Currency")
                        .WithMany("Forms")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTracker.Entities.Models.FormState", "FormState")
                        .WithMany("Forms")
                        .HasForeignKey("FormStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");

                    b.Navigation("FormState");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.FormHistory", b =>
                {
                    b.HasOne("ExpenseTracker.Entities.Models.Employee", "Actor")
                        .WithMany("FormHistories")
                        .HasForeignKey("ActorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTracker.Entities.Models.Form", "Form")
                        .WithMany("FormHistories")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Actor");

                    b.Navigation("Form");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.LoginHistory", b =>
                {
                    b.HasOne("ExpenseTracker.Entities.Models.UserRole", "UserRole")
                        .WithMany("LoginHistories")
                        .HasForeignKey("UserRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.UserRole", b =>
                {
                    b.HasOne("ExpenseTracker.Entities.Models.Principal", "Principal")
                        .WithMany("UserRoles")
                        .HasForeignKey("PrincipalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExpenseTracker.Entities.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Principal");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Currency", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Employee", b =>
                {
                    b.Navigation("ExpenseHistories");

                    b.Navigation("FormHistories");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Expense", b =>
                {
                    b.Navigation("ExpenseHistories");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.ExpenseState", b =>
                {
                    b.Navigation("Expenses");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Form", b =>
                {
                    b.Navigation("Expenses");

                    b.Navigation("FormHistories");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.FormState", b =>
                {
                    b.Navigation("Forms");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Principal", b =>
                {
                    b.Navigation("Employee");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("ExpenseTracker.Entities.Models.UserRole", b =>
                {
                    b.Navigation("LoginHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
